AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template generates the requested number of IAM users and VPCs that will have the
  same custom EC2 policy for EC2 resources. The user
  will be prompted to reset their passwords on next sign-in.
Transform: Macro
Parameters:
  NumberOfUsers:
    Type: String
    Description: Enter the number of users  to create for the Dev Team
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    ConstraintDescription: must be a T2 EC2 instance type.
  SSHLocation:
    Description: >-
      Lockdown SSH access to the bastion host (default can be accessed from
      anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.

Resources:
  StudentUser:
    Type: 'AWS::IAM::User'
    Properties:
      Path: /
      LoginProfile:
        Password: $bzq$UrFLxw9HFtB-49eRtf!
        PasswordResetRequired: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: eb033a2e-ec68-4cfd-8ed4-0129820b5bf6
  StudentEC2VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: "10.0.0.0/24"
      Tags:
      - Key: Name
        Value: StudentVPC
  StudentVPCSUBNET:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-2a
      VpcId: !Ref StudentEC2VPC
      CidrBlock: "10.0.0.0/25"
      MapPublicIpOnLaunch: true
  StudentVPCSecondSUBNET:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-2b
      VpcId: !Ref StudentEC2VPC
      CidrBlock: "10.0.0.128/25"
      MapPublicIpOnLaunch: true
  StudentVPCSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref StudentEC2VPC
      GroupDescription: "Student VPC Security Group"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
        Description: Gitlab
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
        Description: Jenkins
      - IpProtocol: tcp
        FromPort: 8081
        ToPort: 8081
        CidrIp: 0.0.0.0/0
        Description: OWASP
      - IpProtocol: tcp
        FromPort: 50000
        ToPort: 50000
        CidrIp: 0.0.0.0/0
        Description: Nexus
      - IpProtocol: tcp
        FromPort: 8090
        ToPort: 8090
        CidrIp: 0.0.0.0/0
        Description: OWASP
      - IpProtocol: tcp
        FromPort: 9000
        ToPort: 9000
        CidrIp: 0.0.0.0/0
        Description: Sonarqube
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
        Description: SSH
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
        Description: Gitlab
      - IpProtocol: tcp
        FromPort: 9083
        ToPort: 9083
        CidrIp: 0.0.0.0/0
        Description: clouddiscover
  StudentVPCRoutingTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref StudentEC2VPC
    DependsOn:
      - StudentVPCSUBNET
      - StudentVPCSecondSUBNET
  StudentVPCRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref StudentVPCRoutingTable
      GatewayId: !Ref StudentVPCInternetGateway
    DependsOn:
      - StudentVPCGatewayAttachment
  StudentVPCInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  StudentVPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref StudentEC2VPC
      InternetGatewayId: !Ref StudentVPCInternetGateway
  StudentRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'StudentVPCSUBNET'
      RouteTableId: !Ref 'StudentVPCRoutingTable'
  StudentRouteTableSecondAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'StudentVPCSecondSUBNET'
      RouteTableId: !Ref 'StudentVPCRoutingTable'

Outputs : 
  StudentEC2VPC:
    Description: Virtual Private Cloud 10.0.0.0/24
    Value: !Ref StudentEC2VPC
    Export: 
      Name : !Sub "${AWS::StackName}-VPCTST"
  StudentPublicSubnet1:
    Description: Subnet 1 10.0.0.0/25
    Value: !Ref StudentVPCSUBNET
    Export: 
      Name : !Sub "${AWS::StackName}-Subnet1TST"
  StudentVPCSecondSUBNET1:
    Description: Subnet 2 10.0.0.128/25
    Value: !Ref StudentVPCSecondSUBNET
    Export: 
      Name : !Sub "${AWS::StackName}-Subnet2TST"
  StudentVPCSecurityGroup:
    Description: StudentVPCSecurityGroup
    Value: !Ref StudentVPCSecurityGroup
    Export: 
      Name : !Sub "${AWS::StackName}-VPCSecurityGroupTST"
  StudentVPCSecurityGroupID:
    Description: Student VPCSecurityGroup ID
    Value: !GetAtt StudentVPCSecurityGroup.GroupId
    Export: 
      Name : !Sub "${AWS::StackName}-VPCSecurityGroupIDTST"


Mappings:
  AWSRegion2AMI:
    us-east-1:
      AMI: ami-97785bed
    us-west-2:
      AMI: ami-f2d3638a
    us-west-1:
      AMI: ami-824c4ee2
    eu-west-1:
      AMI: ami-d834aba1
    eu-west-2:
      AMI: ami-403e2524
    eu-west-3:
      AMI: ami-8ee056f3
    eu-central-1:
      AMI: ami-5652ce39
    ap-northeast-1:
      AMI: ami-ceafcba8
    ap-northeast-2:
      AMI: ami-863090e8
    ap-northeast-3:
      AMI: ami-83444afe
    ap-southeast-1:
      AMI: ami-68097514
    ap-southeast-2:
      AMI: ami-942dd1f6
    ap-south-1:
      AMI: ami-531a4c3c
    us-east-2:
      AMI: ami-f63b1193
    ca-central-1:
      AMI: ami-a954d1cd
    sa-east-1:
      AMI: ami-84175ae8
    cn-north-1:
      AMI: ami-cb19c4a6
    cn-northwest-1:
      AMI: ami-3e60745c
